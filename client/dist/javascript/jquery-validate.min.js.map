{"version":3,"sources":["jquery.validate.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","called","extend","fn","validate","options","this","length","validator","data","attr","settings","onsubmit","on","event","submitButton","currentTarget","hasClass","cancelSubmit","undefined","handle","hidden","result","submitHandler","formSubmitted","name","val","appendTo","currentForm","debug","call","remove","preventDefault","form","pendingRequest","focusInvalid","window","console","valid","errorList","is","each","element","concat","rules","command","argument","staticRules","existingRules","param","filtered","isContentEditable","closest","normalizeRule","messages","split","index","method","normalizeRules","classRules","attributeRules","dataRules","required","remote","expr","pseudos","blank","a","trim","filled","unchecked","prop","defaults","init","format","source","params","arguments","args","makeArray","unshift","apply","constructor","Array","slice","i","n","replace","RegExp","groups","errorClass","pendingClass","validClass","errorElement","focusCleanup","errorContainer","errorLabelContainer","ignore","ignoreTitle","onfocusin","lastActive","unhighlight","hideThese","errorsFor","onfocusout","checkable","submitted","optional","onkeyup","which","elementValue","inArray","keyCode","invalid","onclick","parentNode","highlight","type","findByName","addClass","removeClass","setDefaults","email","url","date","dateISO","number","digits","equalTo","maxlength","minlength","rangelength","range","max","min","step","autoCreateRanges","prototype","labelContainer","errorContext","containers","add","valueCache","pending","reset","delegate","eventType","key","value","invalidHandler","checkForm","errorMap","triggerHandler","showErrors","prepareForm","elements","currentElements","check","rs","group","cleanElement","clean","checkElement","validationTargetFor","v","prepareElement","testgroup","push","numberOfInvalids","toHide","errors","map","message","successList","grep","defaultShowErrors","resetForm","hideErrors","removeData","removeAttr","resetElements","objectLength","obj","count","not","text","addWrapper","hide","size","findLastActive","filter","trigger","e","rulesCache","find","selector","join","resetInternals","toShow","idx","$element","validity","badInput","substr","lastIndexOf","rule","normalizer","rulesCount","dependencyMismatch","parameters","methods","formatAndAdd","TypeError","id","customDataMessage","charAt","toUpperCase","substring","toLowerCase","customMessage","m","String","findDefined","defaultMessage","title","theregex","test","toToggle","wrapper","parent","error","showLabel","success","validElements","show","invalidElements","place","errorID","elementID","idOrName","describedBy","html","wrap","append","errorPlacement","insertAfter","parents","escapeCssMeta","match","describer","string","getLength","nodeName","depend","dependTypes","boolean","function","startRequest","stopRequest","submit","previousValue","old","destroy","off","classRuleSettings","creditcard","addClassRules","className","classes","normalizeAttributeRule","Number","isNaN","getAttribute","depends","keepRule","parameter","isFunction","parts","isArray","transformed","addMethod","Date","toString","decimalPlaces","num","toInt","Math","round","pow","decimals","errorMessage","re","Error","target","optionDataString","previous","originalMessage","ajax","mode","port","dataType","context","response","pendingRequests","ajaxPrefilter","_","xhr","abort","ajaxSettings"],"mappings":"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","file":"jquery-validate.min.js","sourcesContent":["/*!\r\n * jQuery Validation Plugin v1.19.1\r\n *\r\n * https://jqueryvalidation.org/\r\n *\r\n * Copyright (c) 2019 Jörn Zaefferer\r\n * Released under the MIT license\r\n */\r\n(function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\t\tdefine( [\"jquery\"], factory );\r\n\t} else if (typeof module === \"object\" && module.exports) {\r\n\t\tmodule.exports = factory( require( \"jquery\" ) );\r\n\t} else {\r\n\t\tfactory( jQuery );\r\n\t}\r\n}(function( $ ) {\r\n\r\n$.extend( $.fn, {\n\n\t// https://jqueryvalidation.org/validate/\n\tvalidate: function( options ) {\n\n\t\t// If nothing is selected, return nothing; can't chain anyway\n\t\tif ( !this.length ) {\n\t\t\tif ( options && options.debug && window.console ) {\n\t\t\t\tconsole.warn( \"Nothing selected, can't validate, returning nothing.\" );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if a validator for this form was already created\n\t\tvar validator = $.data( this[ 0 ], \"validator\" );\n\t\tif ( validator ) {\n\t\t\treturn validator;\n\t\t}\n\n\t\t// Add novalidate tag if HTML5.\n\t\tthis.attr( \"novalidate\", \"novalidate\" );\n\n\t\tvalidator = new $.validator( options, this[ 0 ] );\n\t\t$.data( this[ 0 ], \"validator\", validator );\n\n\t\tif ( validator.settings.onsubmit ) {\n\n\t\t\tthis.on( \"click.validate\", \":submit\", function( event ) {\n\n\t\t\t\t// Track the used submit button to properly handle scripted\n\t\t\t\t// submits later.\n\t\t\t\tvalidator.submitButton = event.currentTarget;\n\n\t\t\t\t// Allow suppressing validation by adding a cancel class to the submit button\n\t\t\t\tif ( $( this ).hasClass( \"cancel\" ) ) {\n\t\t\t\t\tvalidator.cancelSubmit = true;\n\t\t\t\t}\n\n\t\t\t\t// Allow suppressing validation by adding the html5 formnovalidate attribute to the submit button\n\t\t\t\tif ( $( this ).attr( \"formnovalidate\" ) !== undefined ) {\n\t\t\t\t\tvalidator.cancelSubmit = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Validate the form on submit\n\t\t\tthis.on( \"submit.validate\", function( event ) {\n\t\t\t\tif ( validator.settings.debug ) {\n\n\t\t\t\t\t// Prevent form submit to be able to see console output\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t\tfunction handle() {\n\t\t\t\t\tvar hidden, result;\n\n\t\t\t\t\t// Insert a hidden input as a replacement for the missing submit button\n\t\t\t\t\t// The hidden input is inserted in two cases:\n\t\t\t\t\t//   - A user defined a `submitHandler`\n\t\t\t\t\t//   - There was a pending request due to `remote` method and `stopRequest()`\n\t\t\t\t\t//     was called to submit the form in case it's valid\n\t\t\t\t\tif ( validator.submitButton && ( validator.settings.submitHandler || validator.formSubmitted ) ) {\n\t\t\t\t\t\thidden = $( \"<input type='hidden'/>\" )\n\t\t\t\t\t\t\t.attr( \"name\", validator.submitButton.name )\n\t\t\t\t\t\t\t.val( $( validator.submitButton ).val() )\n\t\t\t\t\t\t\t.appendTo( validator.currentForm );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( validator.settings.submitHandler && !validator.settings.debug ) {\n\t\t\t\t\t\tresult = validator.settings.submitHandler.call( validator, validator.currentForm, event );\n\t\t\t\t\t\tif ( hidden ) {\n\n\t\t\t\t\t\t\t// And clean up afterwards; thanks to no-block-scope, hidden can be referenced\n\t\t\t\t\t\t\thidden.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( result !== undefined ) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Prevent submit for invalid forms or custom submit handlers\n\t\t\t\tif ( validator.cancelSubmit ) {\n\t\t\t\t\tvalidator.cancelSubmit = false;\n\t\t\t\t\treturn handle();\n\t\t\t\t}\n\t\t\t\tif ( validator.form() ) {\n\t\t\t\t\tif ( validator.pendingRequest ) {\n\t\t\t\t\t\tvalidator.formSubmitted = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn handle();\n\t\t\t\t} else {\n\t\t\t\t\tvalidator.focusInvalid();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn validator;\n\t},\n\n\t// https://jqueryvalidation.org/valid/\n\tvalid: function() {\n\t\tvar valid, validator, errorList;\n\n\t\tif ( $( this[ 0 ] ).is( \"form\" ) ) {\n\t\t\tvalid = this.validate().form();\n\t\t} else {\n\t\t\terrorList = [];\n\t\t\tvalid = true;\n\t\t\tvalidator = $( this[ 0 ].form ).validate();\n\t\t\tthis.each( function() {\n\t\t\t\tvalid = validator.element( this ) && valid;\n\t\t\t\tif ( !valid ) {\n\t\t\t\t\terrorList = errorList.concat( validator.errorList );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tvalidator.errorList = errorList;\n\t\t}\n\t\treturn valid;\n\t},\n\n\t// https://jqueryvalidation.org/rules/\n\trules: function( command, argument ) {\n\t\tvar element = this[ 0 ],\n\t\t\tisContentEditable = typeof this.attr( \"contenteditable\" ) !== \"undefined\" && this.attr( \"contenteditable\" ) !== \"false\",\n\t\t\tsettings, staticRules, existingRules, data, param, filtered;\n\n\t\t// If nothing is selected, return empty object; can't chain anyway\n\t\tif ( element == null ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !element.form && isContentEditable ) {\n\t\t\telement.form = this.closest( \"form\" )[ 0 ];\n\t\t\telement.name = this.attr( \"name\" );\n\t\t}\n\n\t\tif ( element.form == null ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( command ) {\n\t\t\tsettings = $.data( element.form, \"validator\" ).settings;\n\t\t\tstaticRules = settings.rules;\n\t\t\texistingRules = $.validator.staticRules( element );\n\t\t\tswitch ( command ) {\n\t\t\tcase \"add\":\n\t\t\t\t$.extend( existingRules, $.validator.normalizeRule( argument ) );\n\n\t\t\t\t// Remove messages from rules, but allow them to be set separately\n\t\t\t\tdelete existingRules.messages;\n\t\t\t\tstaticRules[ element.name ] = existingRules;\n\t\t\t\tif ( argument.messages ) {\n\t\t\t\t\tsettings.messages[ element.name ] = $.extend( settings.messages[ element.name ], argument.messages );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"remove\":\n\t\t\t\tif ( !argument ) {\n\t\t\t\t\tdelete staticRules[ element.name ];\n\t\t\t\t\treturn existingRules;\n\t\t\t\t}\n\t\t\t\tfiltered = {};\n\t\t\t\t$.each( argument.split( /\\s/ ), function( index, method ) {\n\t\t\t\t\tfiltered[ method ] = existingRules[ method ];\n\t\t\t\t\tdelete existingRules[ method ];\n\t\t\t\t} );\n\t\t\t\treturn filtered;\n\t\t\t}\n\t\t}\n\n\t\tdata = $.validator.normalizeRules(\n\t\t$.extend(\n\t\t\t{},\n\t\t\t$.validator.classRules( element ),\n\t\t\t$.validator.attributeRules( element ),\n\t\t\t$.validator.dataRules( element ),\n\t\t\t$.validator.staticRules( element )\n\t\t), element );\n\n\t\t// Make sure required is at front\n\t\tif ( data.required ) {\n\t\t\tparam = data.required;\n\t\t\tdelete data.required;\n\t\t\tdata = $.extend( { required: param }, data );\n\t\t}\n\n\t\t// Make sure remote is at back\n\t\tif ( data.remote ) {\n\t\t\tparam = data.remote;\n\t\t\tdelete data.remote;\n\t\t\tdata = $.extend( data, { remote: param } );\n\t\t}\n\n\t\treturn data;\n\t}\n} );\n\n// Custom selectors\n$.extend( $.expr.pseudos || $.expr[ \":\" ], {\t\t// '|| $.expr[ \":\" ]' here enables backwards compatibility to jQuery 1.7. Can be removed when dropping jQ 1.7.x support\n\n\t// https://jqueryvalidation.org/blank-selector/\n\tblank: function( a ) {\n\t\treturn !$.trim( \"\" + $( a ).val() );\n\t},\n\n\t// https://jqueryvalidation.org/filled-selector/\n\tfilled: function( a ) {\n\t\tvar val = $( a ).val();\n\t\treturn val !== null && !!$.trim( \"\" + val );\n\t},\n\n\t// https://jqueryvalidation.org/unchecked-selector/\n\tunchecked: function( a ) {\n\t\treturn !$( a ).prop( \"checked\" );\n\t}\n} );\n\n// Constructor for validator\n$.validator = function( options, form ) {\n\tthis.settings = $.extend( true, {}, $.validator.defaults, options );\n\tthis.currentForm = form;\n\tthis.init();\n};\n\n// https://jqueryvalidation.org/jQuery.validator.format/\n$.validator.format = function( source, params ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn function() {\n\t\t\tvar args = $.makeArray( arguments );\n\t\t\targs.unshift( source );\n\t\t\treturn $.validator.format.apply( this, args );\n\t\t};\n\t}\n\tif ( params === undefined ) {\n\t\treturn source;\n\t}\n\tif ( arguments.length > 2 && params.constructor !== Array  ) {\n\t\tparams = $.makeArray( arguments ).slice( 1 );\n\t}\n\tif ( params.constructor !== Array ) {\n\t\tparams = [ params ];\n\t}\n\t$.each( params, function( i, n ) {\n\t\tsource = source.replace( new RegExp( \"\\\\{\" + i + \"\\\\}\", \"g\" ), function() {\n\t\t\treturn n;\n\t\t} );\n\t} );\n\treturn source;\n};\n\n$.extend( $.validator, {\n\n\tdefaults: {\n\t\tmessages: {},\n\t\tgroups: {},\n\t\trules: {},\n\t\terrorClass: \"error\",\n\t\tpendingClass: \"pending\",\n\t\tvalidClass: \"valid\",\n\t\terrorElement: \"label\",\n\t\tfocusCleanup: false,\n\t\tfocusInvalid: true,\n\t\terrorContainer: $( [] ),\n\t\terrorLabelContainer: $( [] ),\n\t\tonsubmit: true,\n\t\tignore: \":hidden\",\n\t\tignoreTitle: false,\n\t\tonfocusin: function( element ) {\n\t\t\tthis.lastActive = element;\n\n\t\t\t// Hide error label and remove error class on focus if enabled\n\t\t\tif ( this.settings.focusCleanup ) {\n\t\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t\tthis.hideThese( this.errorsFor( element ) );\n\t\t\t}\n\t\t},\n\t\tonfocusout: function( element ) {\n\t\t\tif ( !this.checkable( element ) && ( element.name in this.submitted || !this.optional( element ) ) ) {\n\t\t\t\tthis.element( element );\n\t\t\t}\n\t\t},\n\t\tonkeyup: function( element, event ) {\n\n\t\t\t// Avoid revalidate the field when pressing one of the following keys\n\t\t\t// Shift       => 16\n\t\t\t// Ctrl        => 17\n\t\t\t// Alt         => 18\n\t\t\t// Caps lock   => 20\n\t\t\t// End         => 35\n\t\t\t// Home        => 36\n\t\t\t// Left arrow  => 37\n\t\t\t// Up arrow    => 38\n\t\t\t// Right arrow => 39\n\t\t\t// Down arrow  => 40\n\t\t\t// Insert      => 45\n\t\t\t// Num lock    => 144\n\t\t\t// AltGr key   => 225\n\t\t\tvar excludedKeys = [\n\t\t\t\t16, 17, 18, 20, 35, 36, 37,\n\t\t\t\t38, 39, 40, 45, 144, 225\n\t\t\t];\n\n\t\t\tif ( event.which === 9 && this.elementValue( element ) === \"\" || $.inArray( event.keyCode, excludedKeys ) !== -1 ) {\n\t\t\t\treturn;\n\t\t\t} else if ( element.name in this.submitted || element.name in this.invalid ) {\n\t\t\t\tthis.element( element );\n\t\t\t}\n\t\t},\n\t\tonclick: function( element ) {\n\n\t\t\t// Click on selects, radiobuttons and checkboxes\n\t\t\tif ( element.name in this.submitted ) {\n\t\t\t\tthis.element( element );\n\n\t\t\t// Or option elements, check parent select in that case\n\t\t\t} else if ( element.parentNode.name in this.submitted ) {\n\t\t\t\tthis.element( element.parentNode );\n\t\t\t}\n\t\t},\n\t\thighlight: function( element, errorClass, validClass ) {\n\t\t\tif ( element.type === \"radio\" ) {\n\t\t\t\tthis.findByName( element.name ).addClass( errorClass ).removeClass( validClass );\n\t\t\t} else {\n\t\t\t\t$( element ).addClass( errorClass ).removeClass( validClass );\n\t\t\t}\n\t\t},\n\t\tunhighlight: function( element, errorClass, validClass ) {\n\t\t\tif ( element.type === \"radio\" ) {\n\t\t\t\tthis.findByName( element.name ).removeClass( errorClass ).addClass( validClass );\n\t\t\t} else {\n\t\t\t\t$( element ).removeClass( errorClass ).addClass( validClass );\n\t\t\t}\n\t\t}\n\t},\n\n\t// https://jqueryvalidation.org/jQuery.validator.setDefaults/\n\tsetDefaults: function( settings ) {\n\t\t$.extend( $.validator.defaults, settings );\n\t},\n\n\tmessages: {\n\t\trequired: \"This field is required.\",\n\t\tremote: \"Please fix this field.\",\n\t\temail: \"Please enter a valid email address.\",\n\t\turl: \"Please enter a valid URL.\",\n\t\tdate: \"Please enter a valid date.\",\n\t\tdateISO: \"Please enter a valid date (ISO).\",\n\t\tnumber: \"Please enter a valid number.\",\n\t\tdigits: \"Please enter only digits.\",\n\t\tequalTo: \"Please enter the same value again.\",\n\t\tmaxlength: $.validator.format( \"Please enter no more than {0} characters.\" ),\n\t\tminlength: $.validator.format( \"Please enter at least {0} characters.\" ),\n\t\trangelength: $.validator.format( \"Please enter a value between {0} and {1} characters long.\" ),\n\t\trange: $.validator.format( \"Please enter a value between {0} and {1}.\" ),\n\t\tmax: $.validator.format( \"Please enter a value less than or equal to {0}.\" ),\n\t\tmin: $.validator.format( \"Please enter a value greater than or equal to {0}.\" ),\n\t\tstep: $.validator.format( \"Please enter a multiple of {0}.\" )\n\t},\n\n\tautoCreateRanges: false,\n\n\tprototype: {\n\n\t\tinit: function() {\n\t\t\tthis.labelContainer = $( this.settings.errorLabelContainer );\n\t\t\tthis.errorContext = this.labelContainer.length && this.labelContainer || $( this.currentForm );\n\t\t\tthis.containers = $( this.settings.errorContainer ).add( this.settings.errorLabelContainer );\n\t\t\tthis.submitted = {};\n\t\t\tthis.valueCache = {};\n\t\t\tthis.pendingRequest = 0;\n\t\t\tthis.pending = {};\n\t\t\tthis.invalid = {};\n\t\t\tthis.reset();\n\n\t\t\tvar currentForm = this.currentForm,\n\t\t\t\tgroups = ( this.groups = {} ),\n\t\t\t\trules;\n\t\t\t$.each( this.settings.groups, function( key, value ) {\n\t\t\t\tif ( typeof value === \"string\" ) {\n\t\t\t\t\tvalue = value.split( /\\s/ );\n\t\t\t\t}\n\t\t\t\t$.each( value, function( index, name ) {\n\t\t\t\t\tgroups[ name ] = key;\n\t\t\t\t} );\n\t\t\t} );\n\t\t\trules = this.settings.rules;\n\t\t\t$.each( rules, function( key, value ) {\n\t\t\t\trules[ key ] = $.validator.normalizeRule( value );\n\t\t\t} );\n\n\t\t\tfunction delegate( event ) {\n\t\t\t\tvar isContentEditable = typeof $( this ).attr( \"contenteditable\" ) !== \"undefined\" && $( this ).attr( \"contenteditable\" ) !== \"false\";\n\n\t\t\t\t// Set form expando on contenteditable\n\t\t\t\tif ( !this.form && isContentEditable ) {\n\t\t\t\t\tthis.form = $( this ).closest( \"form\" )[ 0 ];\n\t\t\t\t\tthis.name = $( this ).attr( \"name\" );\n\t\t\t\t}\n\n\t\t\t\t// Ignore the element if it belongs to another form. This will happen mainly\n\t\t\t\t// when setting the `form` attribute of an input to the id of another form.\n\t\t\t\tif ( currentForm !== this.form ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar validator = $.data( this.form, \"validator\" ),\n\t\t\t\t\teventType = \"on\" + event.type.replace( /^validate/, \"\" ),\n\t\t\t\t\tsettings = validator.settings;\n\t\t\t\tif ( settings[ eventType ] && !$( this ).is( settings.ignore ) ) {\n\t\t\t\t\tsettings[ eventType ].call( validator, this, event );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$( this.currentForm )\n\t\t\t\t.on( \"focusin.validate focusout.validate keyup.validate\",\n\t\t\t\t\t\":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], \" +\n\t\t\t\t\t\"[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], \" +\n\t\t\t\t\t\"[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], \" +\n\t\t\t\t\t\"[type='radio'], [type='checkbox'], [contenteditable], [type='button']\", delegate )\n\n\t\t\t\t// Support: Chrome, oldIE\n\t\t\t\t// \"select\" is provided as event.target when clicking a option\n\t\t\t\t.on( \"click.validate\", \"select, option, [type='radio'], [type='checkbox']\", delegate );\n\n\t\t\tif ( this.settings.invalidHandler ) {\n\t\t\t\t$( this.currentForm ).on( \"invalid-form.validate\", this.settings.invalidHandler );\n\t\t\t}\n\t\t},\n\n\t\t// https://jqueryvalidation.org/Validator.form/\n\t\tform: function() {\n\t\t\tthis.checkForm();\n\t\t\t$.extend( this.submitted, this.errorMap );\n\t\t\tthis.invalid = $.extend( {}, this.errorMap );\n\t\t\tif ( !this.valid() ) {\n\t\t\t\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ] );\n\t\t\t}\n\t\t\tthis.showErrors();\n\t\t\treturn this.valid();\n\t\t},\n\n\t\tcheckForm: function() {\n\t\t\tthis.prepareForm();\n\t\t\tfor ( var i = 0, elements = ( this.currentElements = this.elements() ); elements[ i ]; i++ ) {\n\t\t\t\tthis.check( elements[ i ] );\n\t\t\t}\n\t\t\treturn this.valid();\n\t\t},\n\n\t\t// https://jqueryvalidation.org/Validator.element/\n\t\telement: function( element ) {\n\t\t\tvar cleanElement = this.clean( element ),\n\t\t\t\tcheckElement = this.validationTargetFor( cleanElement ),\n\t\t\t\tv = this,\n\t\t\t\tresult = true,\n\t\t\t\trs, group;\n\n\t\t\tif ( checkElement === undefined ) {\n\t\t\t\tdelete this.invalid[ cleanElement.name ];\n\t\t\t} else {\n\t\t\t\tthis.prepareElement( checkElement );\n\t\t\t\tthis.currentElements = $( checkElement );\n\n\t\t\t\t// If this element is grouped, then validate all group elements already\n\t\t\t\t// containing a value\n\t\t\t\tgroup = this.groups[ checkElement.name ];\n\t\t\t\tif ( group ) {\n\t\t\t\t\t$.each( this.groups, function( name, testgroup ) {\n\t\t\t\t\t\tif ( testgroup === group && name !== checkElement.name ) {\n\t\t\t\t\t\t\tcleanElement = v.validationTargetFor( v.clean( v.findByName( name ) ) );\n\t\t\t\t\t\t\tif ( cleanElement && cleanElement.name in v.invalid ) {\n\t\t\t\t\t\t\t\tv.currentElements.push( cleanElement );\n\t\t\t\t\t\t\t\tresult = v.check( cleanElement ) && result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\trs = this.check( checkElement ) !== false;\n\t\t\t\tresult = result && rs;\n\t\t\t\tif ( rs ) {\n\t\t\t\t\tthis.invalid[ checkElement.name ] = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.invalid[ checkElement.name ] = true;\n\t\t\t\t}\n\n\t\t\t\tif ( !this.numberOfInvalids() ) {\n\n\t\t\t\t\t// Hide error containers on last error\n\t\t\t\t\tthis.toHide = this.toHide.add( this.containers );\n\t\t\t\t}\n\t\t\t\tthis.showErrors();\n\n\t\t\t\t// Add aria-invalid status for screen readers\n\t\t\t\t$( element ).attr( \"aria-invalid\", !rs );\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\n\t\t// https://jqueryvalidation.org/Validator.showErrors/\n\t\tshowErrors: function( errors ) {\n\t\t\tif ( errors ) {\n\t\t\t\tvar validator = this;\n\n\t\t\t\t// Add items to error list and map\n\t\t\t\t$.extend( this.errorMap, errors );\n\t\t\t\tthis.errorList = $.map( this.errorMap, function( message, name ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmessage: message,\n\t\t\t\t\t\telement: validator.findByName( name )[ 0 ]\n\t\t\t\t\t};\n\t\t\t\t} );\n\n\t\t\t\t// Remove items from success list\n\t\t\t\tthis.successList = $.grep( this.successList, function( element ) {\n\t\t\t\t\treturn !( element.name in errors );\n\t\t\t\t} );\n\t\t\t}\n\t\t\tif ( this.settings.showErrors ) {\n\t\t\t\tthis.settings.showErrors.call( this, this.errorMap, this.errorList );\n\t\t\t} else {\n\t\t\t\tthis.defaultShowErrors();\n\t\t\t}\n\t\t},\n\n\t\t// https://jqueryvalidation.org/Validator.resetForm/\n\t\tresetForm: function() {\n\t\t\tif ( $.fn.resetForm ) {\n\t\t\t\t$( this.currentForm ).resetForm();\n\t\t\t}\n\t\t\tthis.invalid = {};\n\t\t\tthis.submitted = {};\n\t\t\tthis.prepareForm();\n\t\t\tthis.hideErrors();\n\t\t\tvar elements = this.elements()\n\t\t\t\t.removeData( \"previousValue\" )\n\t\t\t\t.removeAttr( \"aria-invalid\" );\n\n\t\t\tthis.resetElements( elements );\n\t\t},\n\n\t\tresetElements: function( elements ) {\n\t\t\tvar i;\n\n\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\tfor ( i = 0; elements[ i ]; i++ ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, elements[ i ],\n\t\t\t\t\t\tthis.settings.errorClass, \"\" );\n\t\t\t\t\tthis.findByName( elements[ i ].name ).removeClass( this.settings.validClass );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telements\n\t\t\t\t\t.removeClass( this.settings.errorClass )\n\t\t\t\t\t.removeClass( this.settings.validClass );\n\t\t\t}\n\t\t},\n\n\t\tnumberOfInvalids: function() {\n\t\t\treturn this.objectLength( this.invalid );\n\t\t},\n\n\t\tobjectLength: function( obj ) {\n\t\t\t/* jshint unused: false */\n\t\t\tvar count = 0,\n\t\t\t\ti;\n\t\t\tfor ( i in obj ) {\n\n\t\t\t\t// This check allows counting elements with empty error\n\t\t\t\t// message as invalid elements\n\t\t\t\tif ( obj[ i ] !== undefined && obj[ i ] !== null && obj[ i ] !== false ) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\thideErrors: function() {\n\t\t\tthis.hideThese( this.toHide );\n\t\t},\n\n\t\thideThese: function( errors ) {\n\t\t\terrors.not( this.containers ).text( \"\" );\n\t\t\tthis.addWrapper( errors ).hide();\n\t\t},\n\n\t\tvalid: function() {\n\t\t\treturn this.size() === 0;\n\t\t},\n\n\t\tsize: function() {\n\t\t\treturn this.errorList.length;\n\t\t},\n\n\t\tfocusInvalid: function() {\n\t\t\tif ( this.settings.focusInvalid ) {\n\t\t\t\ttry {\n\t\t\t\t\t$( this.findLastActive() || this.errorList.length && this.errorList[ 0 ].element || [] )\n\t\t\t\t\t.filter( \":visible\" )\n\t\t\t\t\t.trigger( \"focus\" )\n\n\t\t\t\t\t// Manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find\n\t\t\t\t\t.trigger( \"focusin\" );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// Ignore IE throwing errors when focusing hidden elements\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tfindLastActive: function() {\n\t\t\tvar lastActive = this.lastActive;\n\t\t\treturn lastActive && $.grep( this.errorList, function( n ) {\n\t\t\t\treturn n.element.name === lastActive.name;\n\t\t\t} ).length === 1 && lastActive;\n\t\t},\n\n\t\telements: function() {\n\t\t\tvar validator = this,\n\t\t\t\trulesCache = {};\n\n\t\t\t// Select all valid inputs inside the form (no submit or reset buttons)\n\t\t\treturn $( this.currentForm )\n\t\t\t.find( \"input, select, textarea, [contenteditable]\" )\n\t\t\t.not( \":submit, :reset, :image, :disabled\" )\n\t\t\t.not( this.settings.ignore )\n\t\t\t.filter( function() {\n\t\t\t\tvar name = this.name || $( this ).attr( \"name\" ); // For contenteditable\n\t\t\t\tvar isContentEditable = typeof $( this ).attr( \"contenteditable\" ) !== \"undefined\" && $( this ).attr( \"contenteditable\" ) !== \"false\";\n\n\t\t\t\tif ( !name && validator.settings.debug && window.console ) {\n\t\t\t\t\tconsole.error( \"%o has no name assigned\", this );\n\t\t\t\t}\n\n\t\t\t\t// Set form expando on contenteditable\n\t\t\t\tif ( isContentEditable ) {\n\t\t\t\t\tthis.form = $( this ).closest( \"form\" )[ 0 ];\n\t\t\t\t\tthis.name = name;\n\t\t\t\t}\n\n\t\t\t\t// Ignore elements that belong to other/nested forms\n\t\t\t\tif ( this.form !== validator.currentForm ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Select only the first element for each name, and only those with rules specified\n\t\t\t\tif ( name in rulesCache || !validator.objectLength( $( this ).rules() ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\trulesCache[ name ] = true;\n\t\t\t\treturn true;\n\t\t\t} );\n\t\t},\n\n\t\tclean: function( selector ) {\n\t\t\treturn $( selector )[ 0 ];\n\t\t},\n\n\t\terrors: function() {\n\t\t\tvar errorClass = this.settings.errorClass.split( \" \" ).join( \".\" );\n\t\t\treturn $( this.settings.errorElement + \".\" + errorClass, this.errorContext );\n\t\t},\n\n\t\tresetInternals: function() {\n\t\t\tthis.successList = [];\n\t\t\tthis.errorList = [];\n\t\t\tthis.errorMap = {};\n\t\t\tthis.toShow = $( [] );\n\t\t\tthis.toHide = $( [] );\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.resetInternals();\n\t\t\tthis.currentElements = $( [] );\n\t\t},\n\n\t\tprepareForm: function() {\n\t\t\tthis.reset();\n\t\t\tthis.toHide = this.errors().add( this.containers );\n\t\t},\n\n\t\tprepareElement: function( element ) {\n\t\t\tthis.reset();\n\t\t\tthis.toHide = this.errorsFor( element );\n\t\t},\n\n\t\telementValue: function( element ) {\n\t\t\tvar $element = $( element ),\n\t\t\t\ttype = element.type,\n\t\t\t\tisContentEditable = typeof $element.attr( \"contenteditable\" ) !== \"undefined\" && $element.attr( \"contenteditable\" ) !== \"false\",\n\t\t\t\tval, idx;\n\n\t\t\tif ( type === \"radio\" || type === \"checkbox\" ) {\n\t\t\t\treturn this.findByName( element.name ).filter( \":checked\" ).val();\n\t\t\t} else if ( type === \"number\" && typeof element.validity !== \"undefined\" ) {\n\t\t\t\treturn element.validity.badInput ? \"NaN\" : $element.val();\n\t\t\t}\n\n\t\t\tif ( isContentEditable ) {\n\t\t\t\tval = $element.text();\n\t\t\t} else {\n\t\t\t\tval = $element.val();\n\t\t\t}\n\n\t\t\tif ( type === \"file\" ) {\n\n\t\t\t\t// Modern browser (chrome & safari)\n\t\t\t\tif ( val.substr( 0, 12 ) === \"C:\\\\fakepath\\\\\" ) {\n\t\t\t\t\treturn val.substr( 12 );\n\t\t\t\t}\n\n\t\t\t\t// Legacy browsers\n\t\t\t\t// Unix-based path\n\t\t\t\tidx = val.lastIndexOf( \"/\" );\n\t\t\t\tif ( idx >= 0 ) {\n\t\t\t\t\treturn val.substr( idx + 1 );\n\t\t\t\t}\n\n\t\t\t\t// Windows-based path\n\t\t\t\tidx = val.lastIndexOf( \"\\\\\" );\n\t\t\t\tif ( idx >= 0 ) {\n\t\t\t\t\treturn val.substr( idx + 1 );\n\t\t\t\t}\n\n\t\t\t\t// Just the file name\n\t\t\t\treturn val;\n\t\t\t}\n\n\t\t\tif ( typeof val === \"string\" ) {\n\t\t\t\treturn val.replace( /\\r/g, \"\" );\n\t\t\t}\n\t\t\treturn val;\n\t\t},\n\n\t\tcheck: function( element ) {\n\t\t\telement = this.validationTargetFor( this.clean( element ) );\n\n\t\t\tvar rules = $( element ).rules(),\n\t\t\t\trulesCount = $.map( rules, function( n, i ) {\n\t\t\t\t\treturn i;\n\t\t\t\t} ).length,\n\t\t\t\tdependencyMismatch = false,\n\t\t\t\tval = this.elementValue( element ),\n\t\t\t\tresult, method, rule, normalizer;\n\n\t\t\t// Prioritize the local normalizer defined for this element over the global one\n\t\t\t// if the former exists, otherwise user the global one in case it exists.\n\t\t\tif ( typeof rules.normalizer === \"function\" ) {\n\t\t\t\tnormalizer = rules.normalizer;\n\t\t\t} else if (\ttypeof this.settings.normalizer === \"function\" ) {\n\t\t\t\tnormalizer = this.settings.normalizer;\n\t\t\t}\n\n\t\t\t// If normalizer is defined, then call it to retreive the changed value instead\n\t\t\t// of using the real one.\n\t\t\t// Note that `this` in the normalizer is `element`.\n\t\t\tif ( normalizer ) {\n\t\t\t\tval = normalizer.call( element, val );\n\n\t\t\t\t// Delete the normalizer from rules to avoid treating it as a pre-defined method.\n\t\t\t\tdelete rules.normalizer;\n\t\t\t}\n\n\t\t\tfor ( method in rules ) {\n\t\t\t\trule = { method: method, parameters: rules[ method ] };\n\t\t\t\ttry {\n\t\t\t\t\tresult = $.validator.methods[ method ].call( this, val, element, rule.parameters );\n\n\t\t\t\t\t// If a method indicates that the field is optional and therefore valid,\n\t\t\t\t\t// don't mark it as valid when there are no other rules\n\t\t\t\t\tif ( result === \"dependency-mismatch\" && rulesCount === 1 ) {\n\t\t\t\t\t\tdependencyMismatch = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdependencyMismatch = false;\n\n\t\t\t\t\tif ( result === \"pending\" ) {\n\t\t\t\t\t\tthis.toHide = this.toHide.not( this.errorsFor( element ) );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !result ) {\n\t\t\t\t\t\tthis.formatAndAdd( element, rule );\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\tif ( this.settings.debug && window.console ) {\n\t\t\t\t\t\tconsole.log( \"Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\", e );\n\t\t\t\t\t}\n\t\t\t\t\tif ( e instanceof TypeError ) {\n\t\t\t\t\t\te.message += \".  Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( dependencyMismatch ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( this.objectLength( rules ) ) {\n\t\t\t\tthis.successList.push( element );\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t// Return the custom message for the given element and validation method\n\t\t// specified in the element's HTML5 data attribute\n\t\t// return the generic message if present and no method specific message is present\n\t\tcustomDataMessage: function( element, method ) {\n\t\t\treturn $( element ).data( \"msg\" + method.charAt( 0 ).toUpperCase() +\n\t\t\t\tmethod.substring( 1 ).toLowerCase() ) || $( element ).data( \"msg\" );\n\t\t},\n\n\t\t// Return the custom message for the given element name and validation method\n\t\tcustomMessage: function( name, method ) {\n\t\t\tvar m = this.settings.messages[ name ];\n\t\t\treturn m && ( m.constructor === String ? m : m[ method ] );\n\t\t},\n\n\t\t// Return the first defined argument, allowing empty strings\n\t\tfindDefined: function() {\n\t\t\tfor ( var i = 0; i < arguments.length; i++ ) {\n\t\t\t\tif ( arguments[ i ] !== undefined ) {\n\t\t\t\t\treturn arguments[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\n\t\t// The second parameter 'rule' used to be a string, and extended to an object literal\n\t\t// of the following form:\n\t\t// rule = {\n\t\t//     method: \"method name\",\n\t\t//     parameters: \"the given method parameters\"\n\t\t// }\n\t\t//\n\t\t// The old behavior still supported, kept to maintain backward compatibility with\n\t\t// old code, and will be removed in the next major release.\n\t\tdefaultMessage: function( element, rule ) {\n\t\t\tif ( typeof rule === \"string\" ) {\n\t\t\t\trule = { method: rule };\n\t\t\t}\n\n\t\t\tvar message = this.findDefined(\n\t\t\t\t\tthis.customMessage( element.name, rule.method ),\n\t\t\t\t\tthis.customDataMessage( element, rule.method ),\n\n\t\t\t\t\t// 'title' is never undefined, so handle empty string as undefined\n\t\t\t\t\t!this.settings.ignoreTitle && element.title || undefined,\n\t\t\t\t\t$.validator.messages[ rule.method ],\n\t\t\t\t\t\"<strong>Warning: No message defined for \" + element.name + \"</strong>\"\n\t\t\t\t),\n\t\t\t\ttheregex = /\\$?\\{(\\d+)\\}/g;\n\t\t\tif ( typeof message === \"function\" ) {\n\t\t\t\tmessage = message.call( this, rule.parameters, element );\n\t\t\t} else if ( theregex.test( message ) ) {\n\t\t\t\tmessage = $.validator.format( message.replace( theregex, \"{$1}\" ), rule.parameters );\n\t\t\t}\n\n\t\t\treturn message;\n\t\t},\n\n\t\tformatAndAdd: function( element, rule ) {\n\t\t\tvar message = this.defaultMessage( element, rule );\n\n\t\t\tthis.errorList.push( {\n\t\t\t\tmessage: message,\n\t\t\t\telement: element,\n\t\t\t\tmethod: rule.method\n\t\t\t} );\n\n\t\t\tthis.errorMap[ element.name ] = message;\n\t\t\tthis.submitted[ element.name ] = message;\n\t\t},\n\n\t\taddWrapper: function( toToggle ) {\n\t\t\tif ( this.settings.wrapper ) {\n\t\t\t\ttoToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );\n\t\t\t}\n\t\t\treturn toToggle;\n\t\t},\n\n\t\tdefaultShowErrors: function() {\n\t\t\tvar i, elements, error;\n\t\t\tfor ( i = 0; this.errorList[ i ]; i++ ) {\n\t\t\t\terror = this.errorList[ i ];\n\t\t\t\tif ( this.settings.highlight ) {\n\t\t\t\t\tthis.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t\tthis.showLabel( error.element, error.message );\n\t\t\t}\n\t\t\tif ( this.errorList.length ) {\n\t\t\t\tthis.toShow = this.toShow.add( this.containers );\n\t\t\t}\n\t\t\tif ( this.settings.success ) {\n\t\t\t\tfor ( i = 0; this.successList[ i ]; i++ ) {\n\t\t\t\t\tthis.showLabel( this.successList[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\tfor ( i = 0, elements = this.validElements(); elements[ i ]; i++ ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, elements[ i ], this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.toHide = this.toHide.not( this.toShow );\n\t\t\tthis.hideErrors();\n\t\t\tthis.addWrapper( this.toShow ).show();\n\t\t},\n\n\t\tvalidElements: function() {\n\t\t\treturn this.currentElements.not( this.invalidElements() );\n\t\t},\n\n\t\tinvalidElements: function() {\n\t\t\treturn $( this.errorList ).map( function() {\n\t\t\t\treturn this.element;\n\t\t\t} );\n\t\t},\n\n\t\tshowLabel: function( element, message ) {\n\t\t\tvar place, group, errorID, v,\n\t\t\t\terror = this.errorsFor( element ),\n\t\t\t\telementID = this.idOrName( element ),\n\t\t\t\tdescribedBy = $( element ).attr( \"aria-describedby\" );\n\n\t\t\tif ( error.length ) {\n\n\t\t\t\t// Refresh error/success class\n\t\t\t\terror.removeClass( this.settings.validClass ).addClass( this.settings.errorClass );\n\n\t\t\t\t// Replace message on existing label\n\t\t\t\terror.html( message );\n\t\t\t} else {\n\n\t\t\t\t// Create error element\n\t\t\t\terror = $( \"<\" + this.settings.errorElement + \">\" )\n\t\t\t\t\t.attr( \"id\", elementID + \"-error\" )\n\t\t\t\t\t.addClass( this.settings.errorClass )\n\t\t\t\t\t.html( message || \"\" );\n\n\t\t\t\t// Maintain reference to the element to be placed into the DOM\n\t\t\t\tplace = error;\n\t\t\t\tif ( this.settings.wrapper ) {\n\n\t\t\t\t\t// Make sure the element is visible, even in IE\n\t\t\t\t\t// actually showing the wrapped element is handled elsewhere\n\t\t\t\t\tplace = error.hide().show().wrap( \"<\" + this.settings.wrapper + \"/>\" ).parent();\n\t\t\t\t}\n\t\t\t\tif ( this.labelContainer.length ) {\n\t\t\t\t\tthis.labelContainer.append( place );\n\t\t\t\t} else if ( this.settings.errorPlacement ) {\n\t\t\t\t\tthis.settings.errorPlacement.call( this, place, $( element ) );\n\t\t\t\t} else {\n\t\t\t\t\tplace.insertAfter( element );\n\t\t\t\t}\n\n\t\t\t\t// Link error back to the element\n\t\t\t\tif ( error.is( \"label\" ) ) {\n\n\t\t\t\t\t// If the error is a label, then associate using 'for'\n\t\t\t\t\terror.attr( \"for\", elementID );\n\n\t\t\t\t\t// If the element is not a child of an associated label, then it's necessary\n\t\t\t\t\t// to explicitly apply aria-describedby\n\t\t\t\t} else if ( error.parents( \"label[for='\" + this.escapeCssMeta( elementID ) + \"']\" ).length === 0 ) {\n\t\t\t\t\terrorID = error.attr( \"id\" );\n\n\t\t\t\t\t// Respect existing non-error aria-describedby\n\t\t\t\t\tif ( !describedBy ) {\n\t\t\t\t\t\tdescribedBy = errorID;\n\t\t\t\t\t} else if ( !describedBy.match( new RegExp( \"\\\\b\" + this.escapeCssMeta( errorID ) + \"\\\\b\" ) ) ) {\n\n\t\t\t\t\t\t// Add to end of list if not already present\n\t\t\t\t\t\tdescribedBy += \" \" + errorID;\n\t\t\t\t\t}\n\t\t\t\t\t$( element ).attr( \"aria-describedby\", describedBy );\n\n\t\t\t\t\t// If this element is grouped, then assign to all elements in the same group\n\t\t\t\t\tgroup = this.groups[ element.name ];\n\t\t\t\t\tif ( group ) {\n\t\t\t\t\t\tv = this;\n\t\t\t\t\t\t$.each( v.groups, function( name, testgroup ) {\n\t\t\t\t\t\t\tif ( testgroup === group ) {\n\t\t\t\t\t\t\t\t$( \"[name='\" + v.escapeCssMeta( name ) + \"']\", v.currentForm )\n\t\t\t\t\t\t\t\t\t.attr( \"aria-describedby\", error.attr( \"id\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( !message && this.settings.success ) {\n\t\t\t\terror.text( \"\" );\n\t\t\t\tif ( typeof this.settings.success === \"string\" ) {\n\t\t\t\t\terror.addClass( this.settings.success );\n\t\t\t\t} else {\n\t\t\t\t\tthis.settings.success( error, element );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.toShow = this.toShow.add( error );\n\t\t},\n\n\t\terrorsFor: function( element ) {\n\t\t\tvar name = this.escapeCssMeta( this.idOrName( element ) ),\n\t\t\t\tdescriber = $( element ).attr( \"aria-describedby\" ),\n\t\t\t\tselector = \"label[for='\" + name + \"'], label[for='\" + name + \"'] *\";\n\n\t\t\t// 'aria-describedby' should directly reference the error element\n\t\t\tif ( describer ) {\n\t\t\t\tselector = selector + \", #\" + this.escapeCssMeta( describer )\n\t\t\t\t\t.replace( /\\s+/g, \", #\" );\n\t\t\t}\n\n\t\t\treturn this\n\t\t\t\t.errors()\n\t\t\t\t.filter( selector );\n\t\t},\n\n\t\t// See https://api.jquery.com/category/selectors/, for CSS\n\t\t// meta-characters that should be escaped in order to be used with JQuery\n\t\t// as a literal part of a name/id or any selector.\n\t\tescapeCssMeta: function( string ) {\n\t\t\treturn string.replace( /([\\\\!\"#$%&'()*+,./:;<=>?@\\[\\]^`{|}~])/g, \"\\\\$1\" );\n\t\t},\n\n\t\tidOrName: function( element ) {\n\t\t\treturn this.groups[ element.name ] || ( this.checkable( element ) ? element.name : element.id || element.name );\n\t\t},\n\n\t\tvalidationTargetFor: function( element ) {\n\n\t\t\t// If radio/checkbox, validate first element in group instead\n\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\telement = this.findByName( element.name );\n\t\t\t}\n\n\t\t\t// Always apply ignore filter\n\t\t\treturn $( element ).not( this.settings.ignore )[ 0 ];\n\t\t},\n\n\t\tcheckable: function( element ) {\n\t\t\treturn ( /radio|checkbox/i ).test( element.type );\n\t\t},\n\n\t\tfindByName: function( name ) {\n\t\t\treturn $( this.currentForm ).find( \"[name='\" + this.escapeCssMeta( name ) + \"']\" );\n\t\t},\n\n\t\tgetLength: function( value, element ) {\n\t\t\tswitch ( element.nodeName.toLowerCase() ) {\n\t\t\tcase \"select\":\n\t\t\t\treturn $( \"option:selected\", element ).length;\n\t\t\tcase \"input\":\n\t\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\t\treturn this.findByName( element.name ).filter( \":checked\" ).length;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value.length;\n\t\t},\n\n\t\tdepend: function( param, element ) {\n\t\t\treturn this.dependTypes[ typeof param ] ? this.dependTypes[ typeof param ]( param, element ) : true;\n\t\t},\n\n\t\tdependTypes: {\n\t\t\t\"boolean\": function( param ) {\n\t\t\t\treturn param;\n\t\t\t},\n\t\t\t\"string\": function( param, element ) {\n\t\t\t\treturn !!$( param, element.form ).length;\n\t\t\t},\n\t\t\t\"function\": function( param, element ) {\n\t\t\t\treturn param( element );\n\t\t\t}\n\t\t},\n\n\t\toptional: function( element ) {\n\t\t\tvar val = this.elementValue( element );\n\t\t\treturn !$.validator.methods.required.call( this, val, element ) && \"dependency-mismatch\";\n\t\t},\n\n\t\tstartRequest: function( element ) {\n\t\t\tif ( !this.pending[ element.name ] ) {\n\t\t\t\tthis.pendingRequest++;\n\t\t\t\t$( element ).addClass( this.settings.pendingClass );\n\t\t\t\tthis.pending[ element.name ] = true;\n\t\t\t}\n\t\t},\n\n\t\tstopRequest: function( element, valid ) {\n\t\t\tthis.pendingRequest--;\n\n\t\t\t// Sometimes synchronization fails, make sure pendingRequest is never < 0\n\t\t\tif ( this.pendingRequest < 0 ) {\n\t\t\t\tthis.pendingRequest = 0;\n\t\t\t}\n\t\t\tdelete this.pending[ element.name ];\n\t\t\t$( element ).removeClass( this.settings.pendingClass );\n\t\t\tif ( valid && this.pendingRequest === 0 && this.formSubmitted && this.form() ) {\n\t\t\t\t$( this.currentForm ).submit();\n\n\t\t\t\t// Remove the hidden input that was used as a replacement for the\n\t\t\t\t// missing submit button. The hidden input is added by `handle()`\n\t\t\t\t// to ensure that the value of the used submit button is passed on\n\t\t\t\t// for scripted submits triggered by this method\n\t\t\t\tif ( this.submitButton ) {\n\t\t\t\t\t$( \"input:hidden[name='\" + this.submitButton.name + \"']\", this.currentForm ).remove();\n\t\t\t\t}\n\n\t\t\t\tthis.formSubmitted = false;\n\t\t\t} else if ( !valid && this.pendingRequest === 0 && this.formSubmitted ) {\n\t\t\t\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ] );\n\t\t\t\tthis.formSubmitted = false;\n\t\t\t}\n\t\t},\n\n\t\tpreviousValue: function( element, method ) {\n\t\t\tmethod = typeof method === \"string\" && method || \"remote\";\n\n\t\t\treturn $.data( element, \"previousValue\" ) || $.data( element, \"previousValue\", {\n\t\t\t\told: null,\n\t\t\t\tvalid: true,\n\t\t\t\tmessage: this.defaultMessage( element, { method: method } )\n\t\t\t} );\n\t\t},\n\n\t\t// Cleans up all forms and elements, removes validator-specific events\n\t\tdestroy: function() {\n\t\t\tthis.resetForm();\n\n\t\t\t$( this.currentForm )\n\t\t\t\t.off( \".validate\" )\n\t\t\t\t.removeData( \"validator\" )\n\t\t\t\t.find( \".validate-equalTo-blur\" )\n\t\t\t\t\t.off( \".validate-equalTo\" )\n\t\t\t\t\t.removeClass( \"validate-equalTo-blur\" )\n\t\t\t\t.find( \".validate-lessThan-blur\" )\n\t\t\t\t\t.off( \".validate-lessThan\" )\n\t\t\t\t\t.removeClass( \"validate-lessThan-blur\" )\n\t\t\t\t.find( \".validate-lessThanEqual-blur\" )\n\t\t\t\t\t.off( \".validate-lessThanEqual\" )\n\t\t\t\t\t.removeClass( \"validate-lessThanEqual-blur\" )\n\t\t\t\t.find( \".validate-greaterThanEqual-blur\" )\n\t\t\t\t\t.off( \".validate-greaterThanEqual\" )\n\t\t\t\t\t.removeClass( \"validate-greaterThanEqual-blur\" )\n\t\t\t\t.find( \".validate-greaterThan-blur\" )\n\t\t\t\t\t.off( \".validate-greaterThan\" )\n\t\t\t\t\t.removeClass( \"validate-greaterThan-blur\" );\n\t\t}\n\n\t},\n\n\tclassRuleSettings: {\n\t\trequired: { required: true },\n\t\temail: { email: true },\n\t\turl: { url: true },\n\t\tdate: { date: true },\n\t\tdateISO: { dateISO: true },\n\t\tnumber: { number: true },\n\t\tdigits: { digits: true },\n\t\tcreditcard: { creditcard: true }\n\t},\n\n\taddClassRules: function( className, rules ) {\n\t\tif ( className.constructor === String ) {\n\t\t\tthis.classRuleSettings[ className ] = rules;\n\t\t} else {\n\t\t\t$.extend( this.classRuleSettings, className );\n\t\t}\n\t},\n\n\tclassRules: function( element ) {\n\t\tvar rules = {},\n\t\t\tclasses = $( element ).attr( \"class\" );\n\n\t\tif ( classes ) {\n\t\t\t$.each( classes.split( \" \" ), function() {\n\t\t\t\tif ( this in $.validator.classRuleSettings ) {\n\t\t\t\t\t$.extend( rules, $.validator.classRuleSettings[ this ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\treturn rules;\n\t},\n\n\tnormalizeAttributeRule: function( rules, type, method, value ) {\n\n\t\t// Convert the value to a number for number inputs, and for text for backwards compability\n\t\t// allows type=\"date\" and others to be compared as strings\n\t\tif ( /min|max|step/.test( method ) && ( type === null || /number|range|text/.test( type ) ) ) {\n\t\t\tvalue = Number( value );\n\n\t\t\t// Support Opera Mini, which returns NaN for undefined minlength\n\t\t\tif ( isNaN( value ) ) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\t\t}\n\n\t\tif ( value || value === 0 ) {\n\t\t\trules[ method ] = value;\n\t\t} else if ( type === method && type !== \"range\" ) {\n\n\t\t\t// Exception: the jquery validate 'range' method\n\t\t\t// does not test for the html5 'range' type\n\t\t\trules[ method ] = true;\n\t\t}\n\t},\n\n\tattributeRules: function( element ) {\n\t\tvar rules = {},\n\t\t\t$element = $( element ),\n\t\t\ttype = element.getAttribute( \"type\" ),\n\t\t\tmethod, value;\n\n\t\tfor ( method in $.validator.methods ) {\n\n\t\t\t// Support for <input required> in both html5 and older browsers\n\t\t\tif ( method === \"required\" ) {\n\t\t\t\tvalue = element.getAttribute( method );\n\n\t\t\t\t// Some browsers return an empty string for the required attribute\n\t\t\t\t// and non-HTML5 browsers might have required=\"\" markup\n\t\t\t\tif ( value === \"\" ) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t}\n\n\t\t\t\t// Force non-HTML5 browsers to return bool\n\t\t\t\tvalue = !!value;\n\t\t\t} else {\n\t\t\t\tvalue = $element.attr( method );\n\t\t\t}\n\n\t\t\tthis.normalizeAttributeRule( rules, type, method, value );\n\t\t}\n\n\t\t// 'maxlength' may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs\n\t\tif ( rules.maxlength && /-1|2147483647|524288/.test( rules.maxlength ) ) {\n\t\t\tdelete rules.maxlength;\n\t\t}\n\n\t\treturn rules;\n\t},\n\n\tdataRules: function( element ) {\n\t\tvar rules = {},\n\t\t\t$element = $( element ),\n\t\t\ttype = element.getAttribute( \"type\" ),\n\t\t\tmethod, value;\n\n\t\tfor ( method in $.validator.methods ) {\n\t\t\tvalue = $element.data( \"rule\" + method.charAt( 0 ).toUpperCase() + method.substring( 1 ).toLowerCase() );\n\n\t\t\t// Cast empty attributes like `data-rule-required` to `true`\n\t\t\tif ( value === \"\" ) {\n\t\t\t\tvalue = true;\n\t\t\t}\n\n\t\t\tthis.normalizeAttributeRule( rules, type, method, value );\n\t\t}\n\t\treturn rules;\n\t},\n\n\tstaticRules: function( element ) {\n\t\tvar rules = {},\n\t\t\tvalidator = $.data( element.form, \"validator\" );\n\n\t\tif ( validator.settings.rules ) {\n\t\t\trules = $.validator.normalizeRule( validator.settings.rules[ element.name ] ) || {};\n\t\t}\n\t\treturn rules;\n\t},\n\n\tnormalizeRules: function( rules, element ) {\n\n\t\t// Handle dependency check\n\t\t$.each( rules, function( prop, val ) {\n\n\t\t\t// Ignore rule when param is explicitly false, eg. required:false\n\t\t\tif ( val === false ) {\n\t\t\t\tdelete rules[ prop ];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( val.param || val.depends ) {\n\t\t\t\tvar keepRule = true;\n\t\t\t\tswitch ( typeof val.depends ) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\tkeepRule = !!$( val.depends, element.form ).length;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\tkeepRule = val.depends.call( element, element );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( keepRule ) {\n\t\t\t\t\trules[ prop ] = val.param !== undefined ? val.param : true;\n\t\t\t\t} else {\n\t\t\t\t\t$.data( element.form, \"validator\" ).resetElements( $( element ) );\n\t\t\t\t\tdelete rules[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Evaluate parameters\n\t\t$.each( rules, function( rule, parameter ) {\n\t\t\trules[ rule ] = $.isFunction( parameter ) && rule !== \"normalizer\" ? parameter( element ) : parameter;\n\t\t} );\n\n\t\t// Clean number parameters\n\t\t$.each( [ \"minlength\", \"maxlength\" ], function() {\n\t\t\tif ( rules[ this ] ) {\n\t\t\t\trules[ this ] = Number( rules[ this ] );\n\t\t\t}\n\t\t} );\n\t\t$.each( [ \"rangelength\", \"range\" ], function() {\n\t\t\tvar parts;\n\t\t\tif ( rules[ this ] ) {\n\t\t\t\tif ( $.isArray( rules[ this ] ) ) {\n\t\t\t\t\trules[ this ] = [ Number( rules[ this ][ 0 ] ), Number( rules[ this ][ 1 ] ) ];\n\t\t\t\t} else if ( typeof rules[ this ] === \"string\" ) {\n\t\t\t\t\tparts = rules[ this ].replace( /[\\[\\]]/g, \"\" ).split( /[\\s,]+/ );\n\t\t\t\t\trules[ this ] = [ Number( parts[ 0 ] ), Number( parts[ 1 ] ) ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tif ( $.validator.autoCreateRanges ) {\n\n\t\t\t// Auto-create ranges\n\t\t\tif ( rules.min != null && rules.max != null ) {\n\t\t\t\trules.range = [ rules.min, rules.max ];\n\t\t\t\tdelete rules.min;\n\t\t\t\tdelete rules.max;\n\t\t\t}\n\t\t\tif ( rules.minlength != null && rules.maxlength != null ) {\n\t\t\t\trules.rangelength = [ rules.minlength, rules.maxlength ];\n\t\t\t\tdelete rules.minlength;\n\t\t\t\tdelete rules.maxlength;\n\t\t\t}\n\t\t}\n\n\t\treturn rules;\n\t},\n\n\t// Converts a simple string to a {string: true} rule, e.g., \"required\" to {required:true}\n\tnormalizeRule: function( data ) {\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tvar transformed = {};\n\t\t\t$.each( data.split( /\\s/ ), function() {\n\t\t\t\ttransformed[ this ] = true;\n\t\t\t} );\n\t\t\tdata = transformed;\n\t\t}\n\t\treturn data;\n\t},\n\n\t// https://jqueryvalidation.org/jQuery.validator.addMethod/\n\taddMethod: function( name, method, message ) {\n\t\t$.validator.methods[ name ] = method;\n\t\t$.validator.messages[ name ] = message !== undefined ? message : $.validator.messages[ name ];\n\t\tif ( method.length < 3 ) {\n\t\t\t$.validator.addClassRules( name, $.validator.normalizeRule( name ) );\n\t\t}\n\t},\n\n\t// https://jqueryvalidation.org/jQuery.validator.methods/\n\tmethods: {\n\n\t\t// https://jqueryvalidation.org/required-method/\n\t\trequired: function( value, element, param ) {\n\n\t\t\t// Check if dependency is met\n\t\t\tif ( !this.depend( param, element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\t\t\tif ( element.nodeName.toLowerCase() === \"select\" ) {\n\n\t\t\t\t// Could be an array for select-multiple or a string, both are fine this way\n\t\t\t\tvar val = $( element ).val();\n\t\t\t\treturn val && val.length > 0;\n\t\t\t}\n\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\treturn this.getLength( value, element ) > 0;\n\t\t\t}\n\t\t\treturn value !== undefined && value !== null && value.length > 0;\n\t\t},\n\n\t\t// https://jqueryvalidation.org/email-method/\n\t\temail: function( value, element ) {\n\n\t\t\t// From https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\n\t\t\t// Retrieved 2014-01-14\n\t\t\t// If you have a problem with this implementation, report a bug against the above spec\n\t\t\t// Or use custom methods to implement your own email validation\n\t\t\treturn this.optional( element ) || /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test( value );\n\t\t},\n\n\t\t// https://jqueryvalidation.org/url-method/\n\t\turl: function( value, element ) {\n\n\t\t\t// Copyright (c) 2010-2013 Diego Perini, MIT licensed\n\t\t\t// https://gist.github.com/dperini/729294\n\t\t\t// see also https://mathiasbynens.be/demo/url-regex\n\t\t\t// modified to allow protocol-relative URLs\n\t\t\treturn this.optional( element ) || /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test( value );\n\t\t},\n\n\t\t// https://jqueryvalidation.org/date-method/\n\t\tdate: ( function() {\n\t\t\tvar called = false;\n\n\t\t\treturn function( value, element ) {\n\t\t\t\tif ( !called ) {\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tif ( this.settings.debug && window.console ) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\"The `date` method is deprecated and will be removed in version '2.0.0'.\\n\" +\n\t\t\t\t\t\t\t\"Please don't use it, since it relies on the Date constructor, which\\n\" +\n\t\t\t\t\t\t\t\"behaves very differently across browsers and locales. Use `dateISO`\\n\" +\n\t\t\t\t\t\t\t\"instead or one of the locale specific methods in `localizations/`\\n\" +\n\t\t\t\t\t\t\t\"and `additional-methods.js`.\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this.optional( element ) || !/Invalid|NaN/.test( new Date( value ).toString() );\n\t\t\t};\n\t\t}() ),\n\n\t\t// https://jqueryvalidation.org/dateISO-method/\n\t\tdateISO: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test( value );\n\t\t},\n\n\t\t// https://jqueryvalidation.org/number-method/\n\t\tnumber: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test( value );\n\t\t},\n\n\t\t// https://jqueryvalidation.org/digits-method/\n\t\tdigits: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^\\d+$/.test( value );\n\t\t},\n\n\t\t// https://jqueryvalidation.org/minlength-method/\n\t\tminlength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || length >= param;\n\t\t},\n\n\t\t// https://jqueryvalidation.org/maxlength-method/\n\t\tmaxlength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || length <= param;\n\t\t},\n\n\t\t// https://jqueryvalidation.org/rangelength-method/\n\t\trangelength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || ( length >= param[ 0 ] && length <= param[ 1 ] );\n\t\t},\n\n\t\t// https://jqueryvalidation.org/min-method/\n\t\tmin: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || value >= param;\n\t\t},\n\n\t\t// https://jqueryvalidation.org/max-method/\n\t\tmax: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || value <= param;\n\t\t},\n\n\t\t// https://jqueryvalidation.org/range-method/\n\t\trange: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || ( value >= param[ 0 ] && value <= param[ 1 ] );\n\t\t},\n\n\t\t// https://jqueryvalidation.org/step-method/\n\t\tstep: function( value, element, param ) {\n\t\t\tvar type = $( element ).attr( \"type\" ),\n\t\t\t\terrorMessage = \"Step attribute on input type \" + type + \" is not supported.\",\n\t\t\t\tsupportedTypes = [ \"text\", \"number\", \"range\" ],\n\t\t\t\tre = new RegExp( \"\\\\b\" + type + \"\\\\b\" ),\n\t\t\t\tnotSupported = type && !re.test( supportedTypes.join() ),\n\t\t\t\tdecimalPlaces = function( num ) {\n\t\t\t\t\tvar match = ( \"\" + num ).match( /(?:\\.(\\d+))?$/ );\n\t\t\t\t\tif ( !match ) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Number of digits right of decimal point.\n\t\t\t\t\treturn match[ 1 ] ? match[ 1 ].length : 0;\n\t\t\t\t},\n\t\t\t\ttoInt = function( num ) {\n\t\t\t\t\treturn Math.round( num * Math.pow( 10, decimals ) );\n\t\t\t\t},\n\t\t\t\tvalid = true,\n\t\t\t\tdecimals;\n\n\t\t\t// Works only for text, number and range input types\n\t\t\t// TODO find a way to support input types date, datetime, datetime-local, month, time and week\n\t\t\tif ( notSupported ) {\n\t\t\t\tthrow new Error( errorMessage );\n\t\t\t}\n\n\t\t\tdecimals = decimalPlaces( param );\n\n\t\t\t// Value can't have too many decimals\n\t\t\tif ( decimalPlaces( value ) > decimals || toInt( value ) % toInt( param ) !== 0 ) {\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\treturn this.optional( element ) || valid;\n\t\t},\n\n\t\t// https://jqueryvalidation.org/equalTo-method/\n\t\tequalTo: function( value, element, param ) {\n\n\t\t\t// Bind to the blur event of the target in order to revalidate whenever the target field is updated\n\t\t\tvar target = $( param );\n\t\t\tif ( this.settings.onfocusout && target.not( \".validate-equalTo-blur\" ).length ) {\n\t\t\t\ttarget.addClass( \"validate-equalTo-blur\" ).on( \"blur.validate-equalTo\", function() {\n\t\t\t\t\t$( element ).valid();\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn value === target.val();\n\t\t},\n\n\t\t// https://jqueryvalidation.org/remote-method/\n\t\tremote: function( value, element, param, method ) {\n\t\t\tif ( this.optional( element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\n\t\t\tmethod = typeof method === \"string\" && method || \"remote\";\n\n\t\t\tvar previous = this.previousValue( element, method ),\n\t\t\t\tvalidator, data, optionDataString;\n\n\t\t\tif ( !this.settings.messages[ element.name ] ) {\n\t\t\t\tthis.settings.messages[ element.name ] = {};\n\t\t\t}\n\t\t\tprevious.originalMessage = previous.originalMessage || this.settings.messages[ element.name ][ method ];\n\t\t\tthis.settings.messages[ element.name ][ method ] = previous.message;\n\n\t\t\tparam = typeof param === \"string\" && { url: param } || param;\n\t\t\toptionDataString = $.param( $.extend( { data: value }, param.data ) );\n\t\t\tif ( previous.old === optionDataString ) {\n\t\t\t\treturn previous.valid;\n\t\t\t}\n\n\t\t\tprevious.old = optionDataString;\n\t\t\tvalidator = this;\n\t\t\tthis.startRequest( element );\n\t\t\tdata = {};\n\t\t\tdata[ element.name ] = value;\n\t\t\t$.ajax( $.extend( true, {\n\t\t\t\tmode: \"abort\",\n\t\t\t\tport: \"validate\" + element.name,\n\t\t\t\tdataType: \"json\",\n\t\t\t\tdata: data,\n\t\t\t\tcontext: validator.currentForm,\n\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\tvar valid = response === true || response === \"true\",\n\t\t\t\t\t\terrors, message, submitted;\n\n\t\t\t\t\tvalidator.settings.messages[ element.name ][ method ] = previous.originalMessage;\n\t\t\t\t\tif ( valid ) {\n\t\t\t\t\t\tsubmitted = validator.formSubmitted;\n\t\t\t\t\t\tvalidator.resetInternals();\n\t\t\t\t\t\tvalidator.toHide = validator.errorsFor( element );\n\t\t\t\t\t\tvalidator.formSubmitted = submitted;\n\t\t\t\t\t\tvalidator.successList.push( element );\n\t\t\t\t\t\tvalidator.invalid[ element.name ] = false;\n\t\t\t\t\t\tvalidator.showErrors();\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors = {};\n\t\t\t\t\t\tmessage = response || validator.defaultMessage( element, { method: method, parameters: value } );\n\t\t\t\t\t\terrors[ element.name ] = previous.message = message;\n\t\t\t\t\t\tvalidator.invalid[ element.name ] = true;\n\t\t\t\t\t\tvalidator.showErrors( errors );\n\t\t\t\t\t}\n\t\t\t\t\tprevious.valid = valid;\n\t\t\t\t\tvalidator.stopRequest( element, valid );\n\t\t\t\t}\n\t\t\t}, param ) );\n\t\t\treturn \"pending\";\n\t\t}\n\t}\n\n} );\n\r\n// Ajax mode: abort\n// usage: $.ajax({ mode: \"abort\"[, port: \"uniqueport\"]});\n// if mode:\"abort\" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()\n\nvar pendingRequests = {},\n\tajax;\n\n// Use a prefilter if available (1.5+)\nif ( $.ajaxPrefilter ) {\n\t$.ajaxPrefilter( function( settings, _, xhr ) {\n\t\tvar port = settings.port;\n\t\tif ( settings.mode === \"abort\" ) {\n\t\t\tif ( pendingRequests[ port ] ) {\n\t\t\t\tpendingRequests[ port ].abort();\n\t\t\t}\n\t\t\tpendingRequests[ port ] = xhr;\n\t\t}\n\t} );\n} else {\n\n\t// Proxy ajax\n\tajax = $.ajax;\n\t$.ajax = function( settings ) {\n\t\tvar mode = ( \"mode\" in settings ? settings : $.ajaxSettings ).mode,\n\t\t\tport = ( \"port\" in settings ? settings : $.ajaxSettings ).port;\n\t\tif ( mode === \"abort\" ) {\n\t\t\tif ( pendingRequests[ port ] ) {\n\t\t\t\tpendingRequests[ port ].abort();\n\t\t\t}\n\t\t\tpendingRequests[ port ] = ajax.apply( this, arguments );\n\t\t\treturn pendingRequests[ port ];\n\t\t}\n\t\treturn ajax.apply( this, arguments );\n\t};\n}\nreturn $;\r\n}));"]}